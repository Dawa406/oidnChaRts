{
    "collab_server" : "",
    "contents" : "library(stringr)\ncontext(\"String length\")\n\n# data_stacked_bar_chart <- data.frame(\n#   \"Country\" = c(\n#     \"United Kingdom\",\"France\",\"Saudi Arabia\",\"Egypt\",\"Germany\",\"China\",\"Slovakia\",\"Canada\",\"Estonia\",\"Ireland\"\n#   ),\n#   \"Business\" =  c(8, 6, 7, 8, 9, 7, 9, 7, 9, 9),\n#   \"Overlay\" = c(22, 28, 11, 19, 11, 39, 22, 10, 30, 7),\n#   \"Personal\" = c(19, 21, 21, 20, 19, 19, 21, 21, 20, 20),\n#   \"Teleconference\" = c(9, 29, 21, 44, 59, 11, 53, 16, 49, 36),\n#   \"Unclassified\" = c(42, 48, 50, 45, 49, 40, 42, 47, 48, 44),\n#   stringsAsFactors = F\n# )\n\n\n\ntest_that(\"stacked_bar_chart(library='highcharter') makes a highchart object\", {\n\n\n  categories_column <- \"Country\"\n  measure_columns <- c(\"Business\",\"Overlay\",\"Personal\",\"Teleconference\",\"Unclassified\")\n\n  hc <- stacked_bar_chart(\n    data = data_stacked_bar_chart,\n    library = \"highcharter\",\n    categories_column = categories_column,\n    measure_columns = measure_columns,\n    stacking_type = \"percent\",\n    ordering_function = var\n  )\n\n  expect_true(all(class(hc) %in% c(\"highchart\",  \"htmlwidget\")))\n\n})\n\ntest_that(\n  \"stacked_bar_chart(library='plotly') is not yet implemented\",\n  expect_equal(\n    stacked_bar_chart(\n      data = sample_data,\n      library = \"plotly\",\n      categories_column = categories_column,\n      measure_columns = measure_columns,\n      stacking_type = \"percent\",\n      ordering_function = var\n    ),\n    \"not implemented yet\"\n  )\n)\n",
    "created" : 1474629510226.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "739327332",
    "id" : "90113C1D",
    "lastKnownWriteTime" : 1474636039,
    "last_content_update" : 1474636039626,
    "path" : "~/Github/oidnChaRts/tests/testthat/test.charts.R",
    "project_path" : "tests/testthat/test.charts.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}