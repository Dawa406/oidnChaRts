{
    "collab_server" : "",
    "contents" : "# Recall that devtools::document()devtools::document() is necessary as shortcut Cmd+Shift+D not working\n\n\n#' Stacked Bar Chart.\n#'\n#' \\code{stacked_bar_chart} creates a stacked bar chart using the specified library, which can be used in the librarie's \\%>\\% workflow..\n#'\n#' @param data A dataframe.\n#' @param library Which library to use, highchart is default.\n#' @param categories_column Divisions within each bar.\n#' @param measure_columns Column names containing data for bars (each category is a specific bar),\n#'  this could also be considered as the \"y-axis\" in a horizontally orientated bar chart.\n#' @param stacking_type Stacking to apply to bars, default NULL. Possible values, c(\"percent\", \"normal\")\n#' @param ordering_function Function applied to bar segments to decide on order, default c.\n#'  It is a good default to choose var.\n#' @param explicit_order Overrides ordering_function, order must be given by index.\n#'\n#' @return Stacked bar chart of the class specified by the specified library.\n#' @examples\n#' stacked_bar_chart(1, 1)\n#' stacked_bar_chart(1, \"foo\")\n#'\n#' #' @section Warning:\n#' These should be considered utility functions only, the magic is contained within the htmlwidget library,\n#' it is perfectly possible breaking changes to the library and/or the underling JavaScript library will\n#' break these. In such case, refer to http://ox-it.github.io/OxfordIDN_htmlwidgets for generic tutorials on\n#' the widely used htmlwidget libraries and how to select an alternative visualisation library.\n#' @export\nstacked_bar_chart <- function(data = NA,\n                              library = \"highcharter\",\n                              categories_column = NA,\n                              measure_columns = NA,\n                              stacking_type = NA,\n                              ordering_function = c,\n                              explicit_order = NA) {\n  switch (\n    library,\n    \"highcharter\" = hc_stacked_bar_chart(\n      data,\n      categories_column,\n      measure_columns,\n      stacking_type,\n      ordering_function,\n      explicit_order\n    ),\n    \"plotly\" = {\n      plotly_stacked_bar_chart(\n        data,\n        categories_column,\n        measure_columns,\n        stacking_type,\n        ordering_function,\n        explicit_order\n      )\n    }\n  )\n}\n\n\n\nhc_stacked_bar_chart <- function(data = NA,\n                                 categories_column = NA,\n                                 measure_columns = NA,\n                                 stacking_type = NA,\n                                 ordering_function = c,\n                                 explicit_order = NA) {\n  ordered_measure <-\n    order(unlist(lapply(measure_columns, function(x) {\n      ordering_function(data[, x])\n    })), decreasing = TRUE) - 1\n\n  chart <-\n    highchart() %>% hc_xAxis(categories = data[, categories_column], title = categories_column)\n\n  invisible(lapply(1:length(measure_columns), function(colNumber) {\n    chart <<-\n      hc_add_series(\n        hc = chart,\n        name = measure_columns[colNumber],\n        data = data[, measure_columns[colNumber]],\n        index = {\n          if (is.na(explicit_order)) {\n            ordered_measure[colNumber]\n          } else\n            explicit_order[colNumber]\n        }\n      )\n  }))\n\n  chart %>% hc_chart(type = \"bar\") %>% hc_plotOptions(series = list(stacking = as.character(stacking_type))) %>% hc_legend(reversed = TRUE)\n\n}\n\nplotly_stacked_bar_chart <- function(data = NA,\n                                     categories_column = NA,\n                                     measure_columns = NA,\n                                     stacking_type = NA,\n                                     ordering_function = c,\n                                     explicit_order = NA) {\n  # sample_data %>% gather_(\"Activity\", \"Days\", setdiff(colnames(sample_data), \"Countries\"))\n  \"not implemented yet\"\n}\n",
    "created" : 1474624354681.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3498429104",
    "id" : "11EAA12F",
    "lastKnownWriteTime" : 1474635758,
    "last_content_update" : 1474635758927,
    "path" : "~/Github/oidnChaRts/R/charts.R",
    "project_path" : "R/charts.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}